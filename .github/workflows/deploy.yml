name: Deploy to PythonAnywhere via API

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install requests
        run: pip install requests

      - name: Upload and run on PythonAnywhere
        env:
          PA_USERNAME: ${{ secrets.PA_USERNAME }}
          PA_TOKEN: ${{ secrets.PA_TOKEN }}
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          VIDEO_STORAGE: ${{ secrets.VIDEO_STORAGE }}
        run: |
          echo "Creating .env..."
          mkdir -p deploy_env
          cp -r * deploy_env/
          echo "TELEGRAM_TOKEN=${TELEGRAM_TOKEN}" >> deploy_env/.env
          echo "VIDEO_STORAGE=${VIDEO_STORAGE}" >> deploy_env/.env

          echo "Zipping..."
          zip -r deploy_env.zip deploy_env

          echo "Uploading and running Python script"
          python3 <<EOF
import requests

username = '${{ secrets.PA_USERNAME }}'
token = '${{ secrets.PA_TOKEN }}'

# Upload ZIP archive
with open('deploy_env.zip', 'rb') as f:
    upload = requests.post(
        f'https://www.pythonanywhere.com/api/v0/user/{username}/files/path/home/{username}/deploy_env.zip',
        headers={'Authorization': f'Token {token}'},
        files={'file': f}
    )
print("Upload ZIP:", upload.status_code, upload.text)

# Unzip and install requirements
bash = requests.post(
    f'https://www.pythonanywhere.com/api/v0/user/{username}/bash_tasks/',
    headers={'Authorization': f'Token {token}', 'Content-Type': 'application/json'},
    json={"command": "unzip -o ~/deploy_env.zip -d ~/ && pip3 install -r ~/deploy_env/requirements.txt"}
)
print("Unzip + install:", bash.status_code, bash.text)

# Run the bot in background
run = requests.post(
    f'https://www.pythonanywhere.com/api/v0/user/{username}/bash_tasks/',
    headers={'Authorization': f'Token {token}', 'Content-Type': 'application/json'},
    json={"command": "cd ~/deploy_env && export $(cat .env | xargs) && nohup python3 main.py &"}
)
print("Run bot:", run.status_code, run.text)
EOF
